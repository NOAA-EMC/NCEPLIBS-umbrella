#!/bin/sh
set -eux
#-----------------------------------------------------
cwd=`pwd`
source ../../../machine-setup.sh > /dev/null 2>&1

#export LIBNAME=sp
#export VER=v2.0.2
export FCMP=ifort

if [ $target = wcoss_cray ]; then
  export FCMP=ftn
  module load PrgEnv-intel
  module load craype-sandybridge
elif [ $target = "wcoss" ]; then
  module load ics/12.1
elif [ $target = "theia" ]; then
  module load intel/15.1.133
elif [ $target = "gaea" ]; then
  :
elif [ $target = "jet" ]; then
  module load intel
elif [ $target = "dell" ]; then
  module load ips/18.0.1.163 impi/18.0.1
fi

#
#     Build sp library
#
if [ $target = "dell" ] || [ $target = "jet" ]; then

for i in `ls *.f`
do
obj=`basename $i .f`
OBJS="${obj}.o"
done
for i in `ls *.F`
do
obj=`basename $i .F`
OBJS="${obj}.o"
done
#
#     Remove make file, if it exists.  May need a new make file
#     with an updated object file list.
#
if [ -f make.libsp ]
then
  rm -f make.libsp
fi
#
#     Generate a new make file ( make.libsp), with the updated object list,
#     from this HERE file.
cat > make.libsp << EOF
SHELL=/bin/sh

\$(LIB):        \$(LIB)( ${OBJS} )

.f.a:
	ifort -c \$(FFLAGS) \$<
	ar -ruv \$(AFLAGS)  \$@ \$*.o
	rm -f \$*.o

.F.a:
	ifort -c \$(FFLAGS) \$<
	ar -ruv \$(AFLAGS)  \$@ \$*.o
	rm -f \$*.o
EOF

#
#     Update 4-byte version of libsp_4.a
#
export LIB="../../libsp_v2.0.2_4.a"
export FFLAGS="-O3 -auto -qopenmp -i4 -convert big_endian -assume byterecl -fp-model strict -real-size 32 -fpp -DLINUX"
export AFLAGS=" "
make -f make.libsp
#
#     Update 8-byte version of libsp_8.a
#
export LIB="../../libsp_v2.0.2_8.a"
export FFLAGS=" -O3 -auto -qopenmp -i8 -r8 -convert big_endian -assume byterecl -fp-model strict -fpp -DLINUX"
export AFLAGS=" "
make -f make.libsp
#
#     Update Double Precision (Size of Real 8-byte and default Integer) version
#     of libsp_d.a
#
export LIB="../../libsp_v2.0.2_d.a"
export FFLAGS=" -O3 -auto -qopenmp -i4 -r8 -convert big_endian -assume byterecl -fp-model strict -fpp -DLINUX"
export AFLAGS=" "
make -f make.libsp

rm -f make.libsp
#EOF

#./makelibsp.sh
#=======================================================================
else
./makelibsp.sh_Linux
fi
mkdir -p ../../lib/${LIBNAME}_${VER}
mv ../../libsp_v2.0.2_4.a ../../lib/${LIBNAME}_${VER}/.
mv ../../libsp_v2.0.2_8.a ../../lib/${LIBNAME}_${VER}/.
mv ../../libsp_v2.0.2_d.a ../../lib/${LIBNAME}_${VER}/.

#
#     Create modulefile
#
cd ../../
lwd=`pwd`
cd $cwd
mkdir -p $lwd/modulefiles/$LIBNAME
cat modulefile.template | sed s:_CWD_:$lwd:g > $lwd/modulefiles/$LIBNAME/$VER

exit
